{"name":"Tabletops","tagline":"A framework for simulating and playtesting card and boardgames","body":"<img width=\"250\" src=\"https://rawgit.com/jhauberg/Tabletops/master/logo.svg\" alt=\"Tabletops\">\r\n\r\nTabletops is a framework for simulating and playtesting card and boardgames. It is not a game engine.\r\n\r\nIn its current state, the framework can be used to model a representation of most games that uses a variety of cards, dice, tokens, decks, piles, and so on.\r\n\r\nThis representation can then be used to create scenarios and perform simulations; i.e. moving tokens, rolling dice, flipping cards, shuffling decks and other common tabletop actions.\r\n\r\n**Future features might include**:\r\n\r\n  * Interface for visually modeling game representations\r\n  * AI layer for automating playtests\r\n  * Rule enforcement\r\n\r\n# Implementation\r\n\r\nThe [tabletop](https://github.com/jhauberg/Tabletops/tree/master/tabletop) is implemented as a component-entity model.\r\n\r\nThis is how you would make a 6-sided die:\r\n\r\n```objective-c\r\nTTEntity *d6 = [TTEntity entity];\r\n\r\nTTDieRepresentation *representation =\r\n  [TTDieRepresentation representationWithSides:\r\n   // note that a 'side' can be any kind of object\r\n   @[ @1, @2, @3, @4, @5, @6 ]];\r\n\r\n[d6 addComponent: representation];\r\n```\r\n\r\nAs expected, the die can be rolled randomly, or turned to show a specific side.\r\n\r\nHere's how you would make a card with a few properties:\r\n\r\n```objective-c\r\nTTEntity *trickCard = [TTEntity entity];\r\n\r\nTTCardRepresentation *representation =\r\n    [TTCardRepresentation representationWithFrontside: @\"card-trick-front-heelflip.png\"\r\n                                          andBackside: @\"card-trick-back.png\"];\r\n\r\nTTPropertyComponent *difficultyProperty =\r\n    [TTPropertyComponent propertyWithName: @\"Difficulty\"\r\n                                 andValue: @3];\r\n\r\nTTPropertyComponent *nameProperty =\r\n    [TTPropertyComponent propertyWithName: @\"Name\"\r\n    // again note that the value can be any kind of object\r\n                                 andValue: @\"Heelflip\"];\r\n\r\n[trickCard addComponents: @[ nameProperty,\r\n                             difficultyProperty,\r\n                             representation ]];\r\n```\r\n\r\nThe card can be flipped, tapped and be part of a larger deck of cards.\r\n\r\n# License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Jacob Hauberg Hansen\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n","google":"UA-55165804-1","note":"Don't delete this file! It's used internally to help with page regeneration."}